package com.fxp.contact.core.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.fxp.contact.core.entity.PhoneNumInfo;
import com.fxp.contact.core.entity.ContactAndHobby;
import com.fxp.contact.core.entity.BankCardInfo;
import com.fxp.contact.core.entity.ContactInfo;
import com.fxp.contact.core.entity.HobbyInfo;
import com.fxp.contact.core.entity.IDCardInfo;

import com.fxp.contact.core.greendao.gen.PhoneNumInfoDao;
import com.fxp.contact.core.greendao.gen.ContactAndHobbyDao;
import com.fxp.contact.core.greendao.gen.BankCardInfoDao;
import com.fxp.contact.core.greendao.gen.ContactInfoDao;
import com.fxp.contact.core.greendao.gen.HobbyInfoDao;
import com.fxp.contact.core.greendao.gen.IDCardInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig phoneNumInfoDaoConfig;
    private final DaoConfig contactAndHobbyDaoConfig;
    private final DaoConfig bankCardInfoDaoConfig;
    private final DaoConfig contactInfoDaoConfig;
    private final DaoConfig hobbyInfoDaoConfig;
    private final DaoConfig iDCardInfoDaoConfig;

    private final PhoneNumInfoDao phoneNumInfoDao;
    private final ContactAndHobbyDao contactAndHobbyDao;
    private final BankCardInfoDao bankCardInfoDao;
    private final ContactInfoDao contactInfoDao;
    private final HobbyInfoDao hobbyInfoDao;
    private final IDCardInfoDao iDCardInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        phoneNumInfoDaoConfig = daoConfigMap.get(PhoneNumInfoDao.class).clone();
        phoneNumInfoDaoConfig.initIdentityScope(type);

        contactAndHobbyDaoConfig = daoConfigMap.get(ContactAndHobbyDao.class).clone();
        contactAndHobbyDaoConfig.initIdentityScope(type);

        bankCardInfoDaoConfig = daoConfigMap.get(BankCardInfoDao.class).clone();
        bankCardInfoDaoConfig.initIdentityScope(type);

        contactInfoDaoConfig = daoConfigMap.get(ContactInfoDao.class).clone();
        contactInfoDaoConfig.initIdentityScope(type);

        hobbyInfoDaoConfig = daoConfigMap.get(HobbyInfoDao.class).clone();
        hobbyInfoDaoConfig.initIdentityScope(type);

        iDCardInfoDaoConfig = daoConfigMap.get(IDCardInfoDao.class).clone();
        iDCardInfoDaoConfig.initIdentityScope(type);

        phoneNumInfoDao = new PhoneNumInfoDao(phoneNumInfoDaoConfig, this);
        contactAndHobbyDao = new ContactAndHobbyDao(contactAndHobbyDaoConfig, this);
        bankCardInfoDao = new BankCardInfoDao(bankCardInfoDaoConfig, this);
        contactInfoDao = new ContactInfoDao(contactInfoDaoConfig, this);
        hobbyInfoDao = new HobbyInfoDao(hobbyInfoDaoConfig, this);
        iDCardInfoDao = new IDCardInfoDao(iDCardInfoDaoConfig, this);

        registerDao(PhoneNumInfo.class, phoneNumInfoDao);
        registerDao(ContactAndHobby.class, contactAndHobbyDao);
        registerDao(BankCardInfo.class, bankCardInfoDao);
        registerDao(ContactInfo.class, contactInfoDao);
        registerDao(HobbyInfo.class, hobbyInfoDao);
        registerDao(IDCardInfo.class, iDCardInfoDao);
    }
    
    public void clear() {
        phoneNumInfoDaoConfig.clearIdentityScope();
        contactAndHobbyDaoConfig.clearIdentityScope();
        bankCardInfoDaoConfig.clearIdentityScope();
        contactInfoDaoConfig.clearIdentityScope();
        hobbyInfoDaoConfig.clearIdentityScope();
        iDCardInfoDaoConfig.clearIdentityScope();
    }

    public PhoneNumInfoDao getPhoneNumInfoDao() {
        return phoneNumInfoDao;
    }

    public ContactAndHobbyDao getContactAndHobbyDao() {
        return contactAndHobbyDao;
    }

    public BankCardInfoDao getBankCardInfoDao() {
        return bankCardInfoDao;
    }

    public ContactInfoDao getContactInfoDao() {
        return contactInfoDao;
    }

    public HobbyInfoDao getHobbyInfoDao() {
        return hobbyInfoDao;
    }

    public IDCardInfoDao getIDCardInfoDao() {
        return iDCardInfoDao;
    }

}
